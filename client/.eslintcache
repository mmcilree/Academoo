[{"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/index.js":"1","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/App.js":"2","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/serviceWorker.js":"3","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HostContext.js":"4","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostCreator.jsx":"5","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HeaderBar.jsx":"6","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostsViewer.jsx":"7","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityFeed.jsx":"8","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Welcome.jsx":"9","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentsViewer.jsx":"10","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityExplorer.jsx":"11","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserSettings.jsx":"12","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Login.jsx":"13","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/SignUp.jsx":"14","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserProfile.jsx":"15","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/LoggedOutRoute.jsx":"16","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityCreator.jsx":"17","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PageNotFound.jsx":"18","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PrivateRoute.jsx":"19","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/test_post_json.js":"20","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Post.jsx":"21","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityList.jsx":"22","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentCreator.jsx":"23","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Sidebar.jsx":"24","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/auth/index.js":"25","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/util/timeSince.js":"26"},{"size":588,"mtime":1605016424619,"results":"27","hashOfConfig":"28"},{"size":2602,"mtime":1610633577074,"results":"29","hashOfConfig":"28"},{"size":5086,"mtime":1605016424619,"results":"30","hashOfConfig":"28"},{"size":118,"mtime":1609676945892,"results":"31","hashOfConfig":"28"},{"size":4912,"mtime":1610633577078,"results":"32","hashOfConfig":"28"},{"size":4073,"mtime":1610633577074,"results":"33","hashOfConfig":"28"},{"size":3845,"mtime":1610633577078,"results":"34","hashOfConfig":"28"},{"size":4768,"mtime":1610633577074,"results":"35","hashOfConfig":"28"},{"size":827,"mtime":1611057164464,"results":"36","hashOfConfig":"28"},{"size":3953,"mtime":1609944051388,"results":"37","hashOfConfig":"28"},{"size":1323,"mtime":1610633577074,"results":"38","hashOfConfig":"28"},{"size":304,"mtime":1609676945896,"results":"39","hashOfConfig":"28"},{"size":2875,"mtime":1610633577078,"results":"40","hashOfConfig":"28"},{"size":5154,"mtime":1610633577078,"results":"41","hashOfConfig":"28"},{"size":1400,"mtime":1609676945896,"results":"42","hashOfConfig":"28"},{"size":344,"mtime":1610633577078,"results":"43","hashOfConfig":"28"},{"size":3654,"mtime":1610633577074,"results":"44","hashOfConfig":"28"},{"size":499,"mtime":1605016424619,"results":"45","hashOfConfig":"28"},{"size":348,"mtime":1609676945896,"results":"46","hashOfConfig":"28"},{"size":908,"mtime":1605016424619,"results":"47","hashOfConfig":"28"},{"size":1000,"mtime":1609676945892,"results":"48","hashOfConfig":"28"},{"size":2597,"mtime":1610633577074,"results":"49","hashOfConfig":"28"},{"size":2889,"mtime":1609676945892,"results":"50","hashOfConfig":"28"},{"size":2375,"mtime":1609676945896,"results":"51","hashOfConfig":"28"},{"size":1263,"mtime":1609676945892,"results":"52","hashOfConfig":"28"},{"size":1026,"mtime":1609676945896,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5mzrh0",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/index.js",[],["114","115"],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/App.js",["116"],"import React from \"react\";\nimport PostCreator from \"./components/PostCreator\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport Welcome from \"./components/Welcome\";\nimport CommunityFeed from \"./components/CommunityFeed\";\nimport PostsViewer from \"./components/PostsViewer\";\nimport CommentsViewer from \"./components/CommentsViewer\";\nimport CommunityExplorer from \"./components/CommunityExplorer\";\nimport UserSettings from \"./components/UserSettings\";\nimport UserProfile from \"./components/UserProfile\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { LoggedOutRoute } from \"./components/LoggedOutRoute\";\nimport CommunityCreator from \"./components/CommunityCreator\";\nimport { HostContext } from \"./components/HostContext\";\n \nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      host: null,\n      setHost: (value) => this.setState({ host: value })\n    };\n  }\n\n  render() {\n    return (\n      <HostContext.Provider value={this.state}>\n        <Router>\n          <div className=\"App\">\n            <Route component={HeaderBar}/>\n            <div className=\"container-md\">\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Welcome} />\n                <PrivateRoute path=\"/home\" component={Welcome} />\n                <PrivateRoute exact path=\"/moosfeed\" component={CommunityFeed} />\n                <PrivateRoute exact path=\"/communities/:id\" component={PostsViewer} />\n                <PrivateRoute path=\"/communities/:instance/:id\" component={PostsViewer} />\n                <PrivateRoute path=\"/create-post\" component={PostCreator} />\n                <PrivateRoute path=\"/moosfeed/comments/:id\" component={CommentsViewer} />\n                <PrivateRoute path=\"/user-settings\" component={UserSettings} />\n                <PrivateRoute path=\"/user-profile\" component={UserProfile} />\n                <PrivateRoute path=\"/explore\" component={CommunityExplorer} />\n                <PrivateRoute path=\"/create-community\" component={CommunityCreator} />\n                <LoggedOutRoute path=\"/login\" component={Login} />\n                <LoggedOutRoute path=\"/sign-up\" component={SignUp} />\n                <Route component={PageNotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </HostContext.Provider>\n    );\n  }\n}\n\nexport default App;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/serviceWorker.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HostContext.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HeaderBar.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostsViewer.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityFeed.jsx",["117"],"import React, { Component, useContext } from \"react\";\nimport Post from \"./Post\";\nimport Sidebar from \"./Sidebar\";\nimport { Card, Container, Row, Col, Form, FormControl, Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { HostContext } from \"./HostContext\";\nimport { PlusCircle } from \"react-bootstrap-icons\";\n\nclass CommunityFeed extends Component {\n  state = {\n    isLoading: true,\n    posts: [],\n    currentCommunity: null,\n    error: null,\n    host: null,\n    newPostText: \"\"\n  }\n\n  static contextType = HostContext;\n\n  componentDidMount() {\n    this.fetchCommunity();\n  }\n\n  componentDidUpdate() {\n    if (this.context.host !== this.state.host) {\n      this.fetchCommunity();\n    } else if (this.state.isLoading) {\n      this.fetchPosts();\n    }\n  }\n\n  async fetchCommunity() {\n    await fetch('/api/communities' + (this.context.host !== null ? \"?external=\" + this.context.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          currentCommunity: data.length > 0 ? data[0] : \"?\"\n        })\n      )\n\n    this.fetchPosts();\n  }\n\n  fetchPosts() {\n    fetch('/api/posts?community=' + this.state.currentCommunity + (this.context.host !== null ? \"&external=\" + this.context.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          posts: data,\n          isLoading: false,\n          host: this.context.host\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleChange(event) {\n    const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const { isLoading, posts, error, currentCommunity, newPostText } = this.state;\n\n    return currentCommunity && (\n      <Container>\n        <Row>\n          <Col xs={8}>\n            <Card className=\"mt-4\">\n              <Card.Header className=\"pt-4\">\n                <h2>{currentCommunity}</h2>\n              </Card.Header>\n              <Card.Body>\n                <Form onSubmit={this.handleSubmit.bind(this)}>\n                  <Form.Row>\n                    <Form.Group as={Col} className=\"d-none d-sm-flex\" sm={6} md={7} lg={9}>\n                      <FormControl \n                        type=\"text\" \n                        placeholder=\"Create your own post: \" \n                        name=\"newPostText\" \n                        className=\"mr-2\" \n                        onChange={this.handleChange.bind(this)} />\n\n                    </Form.Group>\n                    <Form.Group as={Col} xs={12} sm={6} md={5} lg={3}>\n                      <Link to={\n                        {\n                          pathname: \"/create-post\",\n                          state: {\n                            body: newPostText,\n                            community: currentCommunity\n                          }\n                        }\n                      }>\n                        <Button variant=\"outline-secondary\" className=\"w-100\" > <PlusCircle className=\"mb-1\" /> New Moo</Button>\n                      </Link>\n                    </Form.Group>\n                  </Form.Row>\n                </Form>\n                {error ? <Alert variant=\"danger\">Error fetching posts: {error.message}</Alert> : null}\n                {!isLoading ? (\n                  posts.map(data => {\n                    const { parent, id } = data;\n                    return (\n                      parent === currentCommunity ? (\n                        <Card key={id} className=\"mt-4\">\n                          <Card.Body>\n                            <Post postData={data} />\n                            <Link\n                              to={`/moosfeed/comments/${id}`}\n                              className=\"btn btn-primary stretched-link\"\n                            >\n                              View Comments ({data.children.length})\n                          </Link>\n                          </Card.Body>\n                        </Card>\n                      ) : null);\n                  })\n                ) : (\n                    <h3>Loading Posts...</h3>\n                  )}\n                {!isLoading && posts.length === 0 ? <h4>There's no posts yet :-(</h4> : null}\n              </Card.Body>\n            </Card>\n          </Col>\n          \n          <Col>\n            <Sidebar currentCommunity={currentCommunity}\n              changeCommunity={(community) => this.setState({\n                currentCommunity: community,\n                isLoading: true\n              })} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CommunityFeed;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Welcome.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentsViewer.jsx",["118","119","120","121"],"import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport Card from \"react-bootstrap/Card\";\nimport { posts } from \"./test_post_json\";\nimport Button from \"react-bootstrap/Button\";\nimport { ArrowReturnLeft, ChatRight } from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport CommentCreator from \"./CommentCreator\";\nimport { HostContext } from \"./HostContext\";\n\nclass CommentsViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parentPost: null,\n      parentPostId: this.props.match.params.id,\n\n      children: [],\n      fetchedChildren: new Set(),\n      \n      isLoading: true,\n      needsUpdate: false,\n\n      error: null,\n      showCommentEditor: false,\n    }\n  }\n\n  static contextType = HostContext;\n\n  handleOpenCommentEditor() {\n    this.setState({ showCommentEditor: true });\n  }\n\n  handleCloseCommentEditor() {\n    this.setState({ showCommentEditor: false, needsUpdate: true });\n  }\n\n\n  async fetchParentPost() {\n    await fetch('/api/posts/' + this.state.parentPostId + (this.context.host !== null ? \"?external=\" + this.context.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          parentPost: data,\n          needsUpdate: false\n        })\n      );\n    \n    this.fetchChildren();\n  }\n\n  async fetchChildren() {\n    const { parentPost, fetchedChildren, children } = this.state;\n\n    const new_children = await Promise.all(parentPost.children.filter(childId => !fetchedChildren.has(childId)).map(\n      async (childId) => {\n        fetchedChildren.add(childId);\n        return fetch('/api/posts/' + childId + (this.context.host !== null ? \"?external=\" + this.context.host : \"\"))\n          .then(response => response.json())\n          .then(data => data)\n          .catch(error => this.setState({ error, isLoading: false }));\n      }));\n    \n    this.setState({ isLoading: false, children: [...children, ...new_children] })\n  }\n\n  componentDidMount() {\n    this.fetchParentPost();\n  }\n\n  componentDidUpdate() {\n    if(this.state.needsUpdate) {\n      this.fetchParentPost();\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"container-md comments_view\">\n        <Card className=\"mt-4\">\n          {!isLoading ? (\n            <Card.Body>\n              <Link to=\"/moosfeed\" className=\"btn btn-secondary\">\n                Back to Moosfeed <ArrowReturnLeft />\n              </Link>\n              <Card className=\"mt-4\">\n                <Card.Body>\n                  <Post postData={this.state.parentPost} />\n                  <Button variant=\"primary\" onClick={this.handleOpenCommentEditor.bind(this)}>\n                    Leave a comment\n                    {\" \"} <ChatRight />\n                  </Button>\n                  <Modal show={this.state.showCommentEditor} onHide={() => this.setState({ showCommentEditor: false })}>\n                    <Modal.Header closeButton />\n                    <Modal.Body>\n                      <CommentCreator parentPost={this.state.parentPost} onSubmit={this.handleCloseCommentEditor.bind(this)}/>\n                    </Modal.Body>\n                  </Modal>\n\n                </Card.Body>\n              </Card>\n              {this.state.children.sort(comment => comment.created).reverse().map((child) =>\n                child ? (\n                  <Card key={child.id} className=\"mt-4 ml-4 comment\">\n                    <Card.Body>\n                      <Post postData={child} />\n                    </Card.Body>\n                  </Card>\n                ) : null\n              )}\n              {this.state.children.length == 0 ? \n                <p className=\"mt-4 ml-4 comment\">No comments to show.</p> : null}\n\n            </Card.Body>) :\n            <Card.Body><h3>Loading Post...</h3></Card.Body>}\n        </Card>\n      </div>\n    );\n  }\n}\nexport default CommentsViewer;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityExplorer.jsx",["122"],"import React from \"react\";\nimport {Card, Alert} from \"react-bootstrap\";\nimport CommunityList from \"./CommunityList\";\nimport { Link } from \"react-router-dom\";\n\nclass CommunityExplorer extends React.Component {\n  state = {\n    isLoading: true,\n    instances: [],\n    currentCommunity: null,\n    error: null,\n  }\n\n  componentDidMount() {\n    this.fetchInstances();\n  }\n\n  fetchInstances() {\n    fetch(\"/api/get-instances\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          instances: data,\n          isLoading: false,\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  render() {\n    const { isLoading, instances, error } = this.state;\n    return (\n      <Card className=\"mt-4\">\n        <Card.Body>\n          <h1>Explore Commoonities</h1>\n          <p>See what communities are available on the federated network!</p>\n          {error ? <Alert variant=\"danger\">Error fetching instances: {error.message}</Alert> : null}\n          <CommunityList instance=\"local\"/>\n          {!isLoading ?\n            instances.map(name => {\n              return <CommunityList instance={name}> </CommunityList>\n            })\n        : <h3>Loading External Instances...</h3>}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CommunityExplorer;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserSettings.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Login.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/SignUp.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserProfile.jsx",["123"],"import React, { Component } from \"react\";\nimport { Card, Media } from \"react-bootstrap\";\nimport defaultProfile from \"../images/default_profile.png\";\nimport { authFetch } from '../auth';\n\nclass UserProfile extends Component {\n  constructor(props) {\n      super(props);\n      this.state = { \n        user_id: \"\",\n        email: \"\", \n        host: \"\", \n        isLoading: true};\n  } \n\n  fetchUserDetails() {\n    authFetch(\"/api/get-user\").then(response => response.json())\n      .then(data =>\n        this.setState({\n          user_id: data.id,\n          email: data.email,\n          host: data.host,\n          isLoading: false\n        })\n      )\n  }\n\n  componentDidMount() {\n    this.fetchUserDetails();\n  }\n\n  render() {\n    return (\n      <Card className=\"mt-4\">\n        <Card.Body>\n          <Media>\n            <img\n              width={150}\n              height={150}\n              className=\"mr-3 rounded-circle border border-primary\"\n              src={defaultProfile}\n              alt=\"Profile image placeholder\"\n            />\n            {!this.state.isLoading ? (\n            <Media.Body className=\"mr-3\">\n              <h3>Username: {this.state.user_id}</h3>\n              <h4 className=\"text-muted\"> Email: {this.state.email} </h4>\n            </Media.Body> ) : <h3>Loading Profile...</h3> }\n          </Media>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default UserProfile;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/LoggedOutRoute.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PageNotFound.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PrivateRoute.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/test_post_json.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Post.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityList.jsx",["124","125","126"],"import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    CaretUpFill,\n    CaretDownFill\n} from \"react-bootstrap-icons\";\n\n\nclass CommunityList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            communities: [],\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchCommunities();\n    }\n\n    fetchCommunities() {\n        fetch('/api/communities' + (this.props.instance !== \"local\" ? \"?external=\" + this.props.instance : \"\"))\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                    communities: data,\n                    isLoading: false,\n                })\n            )\n    }\n\n    render() {\n        const { communities, isLoading } = this.state;\n        return (\n            <Accordion defaultActiveKey=\"0\">\n                <Card className=\"mt-4\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"pt-4\">\n                        <h5>Hosted {this.props.instance === \"local\" ? \"locally:\" : \"on '\" + this.props.instance + \"':\"}\n                        </h5>\n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"px-0 py-1\">\n                            <ListGroup variant=\"flush\">\n                                {!isLoading ?\n                                    communities.map((community) =>\n                                        community != \"\" &&\n                                        \n                                            <ListGroup.Item>\n                                                <Link to={this.props.instance === \"local\" ? \n                                                \"communities/\" + community : \"communities/\" + this.props.instance + \"/\" + community} >\n                                                {community}\n                                                </Link>\n                                            </ListGroup.Item>)\n                                    : <ListGroup.Item>Loading Communities...</ListGroup.Item>\n                                }\n                            </ListGroup>\n                        </Card.Body>\n                    </Accordion.Collapse>\n\n                </Card>\n            </Accordion>\n        )\n    }\n}\n\nexport default CommunityList;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Sidebar.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/auth/index.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/util/timeSince.js",["127"],"export default function timeSince(timestamp) {\n    let date = new Date(timestamp*1000);\n    \n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n    let count = Math.floor(interval);\n\n    if (interval >= 1) {\n      return count + \" year\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 2592000;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n        return count + \" month\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 86400;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n      return count + \" day\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 3600;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n        return count + \" hour\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 60;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n      return count + \" minute\" + ((count > 1) ? \"s\" : \"\");\n    }\n    \n    return seconds + \" second\" + ((seconds > 1 || seconds == 0 ) ? \"s\" : \"\");\n}",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":14,"column":50,"nodeType":"134","messageId":"135","endLine":14,"endColumn":58},{"ruleId":"132","severity":1,"message":"136","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"137","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"138","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"139","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":115,"column":43,"nodeType":"142","messageId":"143","endLine":115,"endColumn":45},{"ruleId":"132","severity":1,"message":"144","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":37,"column":13,"nodeType":"147","endLine":43,"endColumn":15},{"ruleId":"132","severity":1,"message":"148","line":9,"column":5,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"149","line":10,"column":5,"nodeType":"134","messageId":"135","endLine":10,"endColumn":18},{"ruleId":"140","severity":1,"message":"150","line":53,"column":51,"nodeType":"142","messageId":"143","endLine":53,"endColumn":53},{"ruleId":"140","severity":1,"message":"141","line":41,"column":59,"nodeType":"142","messageId":"143","endLine":41,"endColumn":61},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'posts' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CaretUpFill' is defined but never used.","'CaretDownFill' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]