[{"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/index.js":"1","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/App.js":"2","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/serviceWorker.js":"3","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HostContext.js":"4","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Welcome.jsx":"5","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityExplorer.jsx":"6","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PageNotFound.jsx":"7","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/LoggedOutRoute.jsx":"8","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PrivateRoute.jsx":"9","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserSettings.jsx":"10","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityFeed.jsx":"11","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Login.jsx":"12","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentsViewer.jsx":"13","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityCreator.jsx":"14","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostCreator.jsx":"15","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HeaderBar.jsx":"16","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostsViewer.jsx":"17","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserProfile.jsx":"18","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/SignUp.jsx":"19","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/test_post_json.js":"20","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityList.jsx":"21","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Post.jsx":"22","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Sidebar.jsx":"23","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentCreator.jsx":"24","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/auth/index.js":"25","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/util/timeSince.js":"26","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PublicProfile.jsx":"27"},{"size":588,"mtime":1605016424619,"results":"28","hashOfConfig":"29"},{"size":2922,"mtime":1611933622773,"results":"30","hashOfConfig":"29"},{"size":5086,"mtime":1605016424619,"results":"31","hashOfConfig":"29"},{"size":118,"mtime":1609676945892,"results":"32","hashOfConfig":"29"},{"size":530,"mtime":1611758929293,"results":"33","hashOfConfig":"29"},{"size":1326,"mtime":1611245817068,"results":"34","hashOfConfig":"29"},{"size":499,"mtime":1605016424619,"results":"35","hashOfConfig":"29"},{"size":344,"mtime":1610633577078,"results":"36","hashOfConfig":"29"},{"size":348,"mtime":1609676945896,"results":"37","hashOfConfig":"29"},{"size":2935,"mtime":1611933622777,"results":"38","hashOfConfig":"29"},{"size":5145,"mtime":1611245817068,"results":"39","hashOfConfig":"29"},{"size":2875,"mtime":1610633577078,"results":"40","hashOfConfig":"29"},{"size":4048,"mtime":1611245817068,"results":"41","hashOfConfig":"29"},{"size":6192,"mtime":1611758929293,"results":"42","hashOfConfig":"29"},{"size":7302,"mtime":1611758929293,"results":"43","hashOfConfig":"29"},{"size":3282,"mtime":1611934002651,"results":"44","hashOfConfig":"29"},{"size":3653,"mtime":1611933622773,"results":"45","hashOfConfig":"29"},{"size":2918,"mtime":1611934002651,"results":"46","hashOfConfig":"29"},{"size":5247,"mtime":1611933622773,"results":"47","hashOfConfig":"29"},{"size":908,"mtime":1605016424619,"results":"48","hashOfConfig":"29"},{"size":2597,"mtime":1610633577074,"results":"49","hashOfConfig":"29"},{"size":1000,"mtime":1609676945892,"results":"50","hashOfConfig":"29"},{"size":2375,"mtime":1609676945896,"results":"51","hashOfConfig":"29"},{"size":2889,"mtime":1609676945892,"results":"52","hashOfConfig":"29"},{"size":1408,"mtime":1611933622773,"results":"53","hashOfConfig":"29"},{"size":1026,"mtime":1609676945896,"results":"54","hashOfConfig":"29"},{"size":2705,"mtime":1611933622773,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"5mzrh0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":1,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/index.js",[],["121","122"],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/App.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/serviceWorker.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HostContext.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Welcome.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityExplorer.jsx",["123"],"import React from \"react\";\nimport {Card, Alert} from \"react-bootstrap\";\nimport CommunityList from \"./CommunityList\";\nimport { Link } from \"react-router-dom\";\n\nclass CommunityExplorer extends React.Component {\n  state = {\n    isLoading: true,\n    instances: [],\n    currentCommunity: null,\n    error: null,\n  }\n\n  componentDidMount() {\n    this.fetchInstances();\n  }\n\n  fetchInstances() {\n    fetch(\"/api/get-instances\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          instances: data,\n          isLoading: false,\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  \n  render() {\n    const { isLoading, instances, error } = this.state;\n    return (\n      <Card className=\"mt-4\">\n        <Card.Body>\n          <h1>Explore Commoonities</h1>\n          <p>See what communities are available on the federated network!</p>\n          {error ? <Alert variant=\"danger\">Error fetching instances: {error.message}</Alert> : null}\n          <CommunityList instance=\"local\"/>\n          {!isLoading ?\n            instances.map(name => {\n              return <CommunityList instance={name}> </CommunityList>\n            })\n        : <h3>Loading External Instances...</h3>}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CommunityExplorer;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PageNotFound.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/LoggedOutRoute.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PrivateRoute.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserSettings.jsx",["124"],"import React, { Component } from \"react\";\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { authFetch } from '../auth';\n\nclass UserSettings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      errors: [],\n      changed: false,\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  validateForm() {\n    const errors = [];\n    if (this.state.oldPassword.length === 0 || this.state.newPassword.length === 0) {\n        errors.push(\"Required fields have been left blank.\")\n    }\n\n    if (!this.state.newPassword.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/)) {\n      errors.push(\n        <p>Password should have:\n          <ul> \n            <li> Minimum eight characters</li> \n            <li> At least one number</li>\n          </ul>\n        </p>);\n    }\n\n    return errors;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const errors = this.validateForm();\n    if (errors.length > 0) {\n        this.setState({ errors });\n        return;\n    }\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: {\n            old_password: this.state.oldPassword,\n            new_password: this.state.newPassword,\n        }\n    };\n    requestOptions.body = JSON.stringify(requestOptions.body);\n\n    authFetch('/api/change-password', requestOptions).then(r => r.status).then(statusCode => {\n      if (statusCode != 200) { \n        this.setState( { changed: false, errors: [\"Incorrect Password!\"] } )\n      } else {\n        this.setState( { changed: true, errors: [] });\n      }\n    });\n    this.setState(\n        { oldPassword: \"\", newPassword: \"\" }\n    );\n    this.props.history.push('/user-settings');\n  }\n\n  render() {\n    const { errors, changed } = this.state;\n    return (\n      <Card className=\"mt-4\">\n        <Card.Body>\n          <h3>Settings</h3>\n          {errors.map(error => (\n              <Alert variant='warning' key={error}>{error}</Alert>\n          ))}\n          { changed && <Alert variant='success'>Password changed successfully!</Alert>}\n\n          <Form onSubmit={this.handleSubmit.bind(this)}>\n            <Form.Group>\n              <Form.Label>Current Password</Form.Label>\n              <Form.Control type=\"password\" name=\"oldPassword\" onChange={this.handleChange.bind(this)} value={this.state.oldPassword} />\n              <Form.Label>New Password</Form.Label>\n              <Form.Control type=\"password\" name=\"newPassword\" onChange={this.handleChange.bind(this)} value={this.state.newPassword} />\n            </Form.Group>\n\n            <Button type=\"submit\">\n              Change Password\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default UserSettings;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityFeed.jsx",["125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { Component, useContext } from \"react\";\nimport Post from \"./Post\";\nimport Sidebar from \"./Sidebar\";\nimport { Card, Container, Row, Col, Form, FormControl, Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { HostContext } from \"./HostContext\";\nimport { PlusCircle } from \"react-bootstrap-icons\";\n\nclass CommunityFeed extends Component {\n  state = {\n    isLoading: true,\n    posts: [],\n    currentCommunity: null,\n    error: null,\n    host: null,\n    newPostText: \"\"\n  }\n\n  static contextType = HostContext;\n\n  componentDidMount() {\n    this.fetchCommunity();\n  }\n\n  componentDidUpdate() {\n    if (this.context.host !== this.state.host) {\n      this.fetchCommunity();\n    } else if (this.state.isLoading) {\n      this.fetchPosts();\n    }\n  }\n\n  async fetchCommunity() {\n    await fetch('/api/communities' + (this.context.host !== null ? \"?external=\" + this.context.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          currentCommunity: data.length > 0 ? data[0] : \"?\"\n        })\n      )\n\n    this.fetchPosts();\n  }\n\n  fetchPosts() {\n    fetch('/api/posts?community=' + this.state.currentCommunity + (this.context.host !== null ? \"&external=\" + this.context.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          posts: data,\n          isLoading: false,\n          host: this.context.host\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const { isLoading, posts, error, currentCommunity, newPostText } = this.state;\n\n    return currentCommunity && (\n      <Container>\n        <Card className=\"mt-4\">\n          <Card.Body>\n            <h3>You haven't yet subscribed to any communities!</h3>\n            <p>See what's available:</p>\n            <Link to=\"/explore\" className=\"btn btn-secondary\">\n            Explore Communities\n          </Link>\n          </Card.Body>\n\n        </Card>\n        {/*\n        <Row>\n          <Col xs={8}>\n            <Card className=\"mt-4\">\n              <Card.Header className=\"pt-4\">\n                <h2>{currentCommunity}</h2>\n              </Card.Header>\n              <Card.Body>\n                <Form onSubmit={this.handleSubmit.bind(this)}>\n                  <Form.Row>\n                    <Form.Group as={Col} className=\"d-none d-sm-flex\" sm={6} md={7} lg={9}>\n                      <FormControl \n                        type=\"text\" \n                        placeholder=\"Create your own post: \" \n                        name=\"newPostText\" \n                        className=\"mr-2\" \n                        onChange={this.handleChange.bind(this)} />\n\n                    </Form.Group>\n                    <Form.Group as={Col} xs={12} sm={6} md={5} lg={3}>\n                      <Link to={\n                        {\n                          pathname: \"/create-post\",\n                          state: {\n                            body: newPostText,\n                            community: currentCommunity\n                          }\n                        }\n                      }>\n                        <Button variant=\"outline-secondary\" className=\"w-100\" > <PlusCircle className=\"mb-1\" /> New Moo</Button>\n                      </Link>\n                    </Form.Group>\n                  </Form.Row>\n                </Form>\n                {error ? <Alert variant=\"danger\">Error fetching posts: {error.message}</Alert> : null}\n                {!isLoading ? (\n                  posts.map(data => {\n                    const { parent, id } = data;\n                    return (\n                      parent === currentCommunity ? (\n                        <Card key={id} className=\"mt-4\">\n                          <Card.Body>\n                            <Post postData={data} />\n                            <Link\n                              to={this.state.host == \"local\" ? `/comments/${id}` : '/comments/' + this.state.host + `/${id}`}\n                              className=\"btn btn-primary stretched-link\"\n                            >\n                              View Comments ({data.children.length})\n                          </Link>\n                          </Card.Body>\n                        </Card>\n                      ) : null);\n                  })\n                ) : (\n                    <h3>Loading Posts...</h3>\n                  )}\n                {!isLoading && posts.length === 0 ? <h4>There's no posts yet :-(</h4> : null}\n              </Card.Body>\n            </Card>\n          </Col>\n          \n          <Col>\n            <Sidebar currentCommunity={currentCommunity}\n              changeCommunity={(community) => this.setState({\n                currentCommunity: community,\n                isLoading: true\n              })} />\n          </Col>\n            </Row>*/}\n      </Container>\n    );\n  }\n}\n\nexport default CommunityFeed;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Login.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentsViewer.jsx",["139","140","141","142"],"import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport Card from \"react-bootstrap/Card\";\nimport { posts } from \"./test_post_json\";\nimport Button from \"react-bootstrap/Button\";\nimport { ArrowReturnLeft, ChatRight } from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport CommentCreator from \"./CommentCreator\";\nimport { HostContext } from \"./HostContext\";\n\nclass CommentsViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parentPost: null,\n      parentPostId: this.props.match.params.id,\n      host: this.props.match.params.instance ? this.props.match.params.instance : \"local\",\n      children: [],\n      fetchedChildren: new Set(),\n      \n      isLoading: true,\n      needsUpdate: false,\n\n      error: null,\n      showCommentEditor: false,\n      \n    }\n  }\n\n  static contextType = HostContext;\n\n  handleOpenCommentEditor() {\n    this.setState({ showCommentEditor: true });\n  }\n\n  handleCloseCommentEditor() {\n    this.setState({ showCommentEditor: false, needsUpdate: true });\n  }\n\n\n  async fetchParentPost() {\n    await fetch('/api/posts/' + this.state.parentPostId + (this.state.host !== \"local\" ? \"?external=\" + this.state.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          parentPost: data,\n          needsUpdate: false\n        })\n      );\n    \n    this.fetchChildren();\n  }\n\n  async fetchChildren() {\n    const { parentPost, fetchedChildren, children } = this.state;\n\n    const new_children = await Promise.all(parentPost.children.filter(childId => !fetchedChildren.has(childId)).map(\n      async (childId) => {\n        fetchedChildren.add(childId);\n        return fetch('/api/posts/' + childId + (this.state.host !== \"local\" ? \"?external=\" + this.state.host : \"\"))\n          .then(response => response.json())\n          .then(data => data)\n          .catch(error => this.setState({ error, isLoading: false }));\n      }));\n    \n    this.setState({ isLoading: false, children: [...children, ...new_children] })\n  }\n\n  componentDidMount() {\n    this.fetchParentPost();\n  }\n\n  componentDidUpdate() {\n    if(this.state.needsUpdate) {\n      this.fetchParentPost();\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"container-md comments_view\">\n        <Card className=\"mt-4\">\n          {!isLoading ? (\n            <Card.Body>\n              <Link to=\"/moosfeed\" className=\"btn btn-secondary\">\n                Back to Moosfeed <ArrowReturnLeft />\n              </Link>\n              <Card className=\"mt-4\">\n                <Card.Body>\n                  <Post postData={this.state.parentPost} />\n                  <Button variant=\"primary\" onClick={this.handleOpenCommentEditor.bind(this)}>\n                    Leave a comment\n                    {\" \"} <ChatRight />\n                  </Button>\n                  <Modal show={this.state.showCommentEditor} onHide={() => this.setState({ showCommentEditor: false })}>\n                    <Modal.Header closeButton />\n                    <Modal.Body>\n                      <CommentCreator parentPost={this.state.parentPost} onSubmit={this.handleCloseCommentEditor.bind(this)}/>\n                    </Modal.Body>\n                  </Modal>\n\n                </Card.Body>\n              </Card>\n              {this.state.children.sort(comment => comment.created).reverse().map((child) =>\n                child ? (\n                  <Card key={child.id} className=\"mt-4 ml-4 comment\">\n                    <Card.Body>\n                      <Post postData={child} />\n                    </Card.Body>\n                  </Card>\n                ) : null\n              )}\n              {this.state.children.length == 0 ? \n                <p className=\"mt-4 ml-4 comment\">No comments to show.</p> : null}\n\n            </Card.Body>) :\n            <Card.Body><h3>Loading Post...</h3></Card.Body>}\n        </Card>\n      </div>\n    );\n  }\n}\nexport default CommentsViewer;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/HeaderBar.jsx",["143","144","145","146","147","148","149","150","151"],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PostsViewer.jsx",["152","153","154"],"import React, { Component } from \"react\";\nimport Post from \"./Post\";\nimport { Card, Col, Form, FormControl, Button, Alert, Row, CardGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { PlusCircle } from \"react-bootstrap-icons\";\n\nclass PostsViewer extends Component {\n  state = {\n    isLoading: true,\n    posts: [],\n    currentCommunity: this.props.match.params.id,\n    error: null,\n    host: this.props.match.params.instance ? this.props.match.params.instance : \"local\",\n    newPostText: \"\"\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  fetchPosts() {\n    fetch('/api/posts?community=' + this.state.currentCommunity + (this.state.host !== \"local\" ? \"&external=\" + this.state.host : \"\"))\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          posts: data,\n          isLoading: false,\n          host: this.state.host\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const { isLoading, posts, error, currentCommunity, newPostText, host } = this.state;\n\n    return currentCommunity && (\n      <Card className=\"mt-4\">\n        <Card.Header className=\"pt-4\">\n          <h2>{currentCommunity}</h2>\n        </Card.Header>\n        <Card.Body >\n          <Form onSubmit={this.handleSubmit.bind(this)}>\n            <Form.Row>\n              <Form.Group as={Col} className=\"d-none d-sm-flex\" sm={6} md={7} lg={9}>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Create your own post: \"\n                  name=\"newPostText\"\n                  className=\"mr-2\"\n                  onChange={this.handleChange.bind(this)} />\n\n              </Form.Group>\n              <Form.Group as={Col} xs={12} sm={6} md={5} lg={3}>\n                <Link to={\n                  {\n                    pathname: \"/create-post\",\n                    state: {\n                      body: newPostText,\n                      community: currentCommunity,\n                      host: host\n                    }\n                  }\n                }>\n                  <Button variant=\"outline-secondary\" className=\"w-100\" > <PlusCircle className=\"mb-1\" /> New Moo</Button>\n                </Link>\n              </Form.Group>\n            </Form.Row>\n          </Form>\n          {error ? <Alert variant=\"danger\">Error fetching posts: {error.message}</Alert> : null}\n          {!isLoading ? (\n            posts.map(data => {\n              const { parent, id } = data;\n              return (\n                parent === currentCommunity ? (\n                    <Card key={id} className=\"mt-4\">\n                      <Card.Body className=\"h-100 mh-100\">\n                        <Post postData={data} />\n                        <Link\n                          to={this.state.host == \"local\" ? `/comments/${id}` : '/comments/' + this.state.host + `/${id}`}\n                          className=\"btn btn-primary stretched-link\"\n                        >\n                          View Comments ({data.children.length})\n                          </Link>\n                      </Card.Body>\n                    </Card>\n                ) : null);\n            })\n          ) : (\n              <h3>Loading Posts...</h3>\n            )}\n          {!isLoading && posts.length === 0 ? <h4>There's no posts yet :-(</h4> : null}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default PostsViewer;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/UserProfile.jsx",["155"],"import React, { Component } from \"react\";\nimport { Card, Media } from \"react-bootstrap\";\nimport defaultProfile from \"../images/default_profile.png\";\nimport { authFetch } from '../auth';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass UserProfile extends Component {\n  constructor(props) {\n      super(props);\n      this.state = { \n        user_id: \"\",\n        email: \"\", \n        host: \"\", \n        isLoading: true};\n  } \n\n  fetchUserDetails() {\n    authFetch(\"/api/get-user\").then(response => response.json())\n      .then(data =>\n        this.setState({\n          user_id: data.id,\n          email: data.email,\n          host: data.host,\n          isLoading: false\n        })\n      )\n  }\n\n  componentDidMount() {\n    this.fetchUserDetails();\n  }\n\n  render() {\n    return (\n      <Card className=\"mt-4\">\n        <Card.Body>\n        \n          <Media>\n            <img\n              width={150}\n              height={150}\n              className=\"mr-3 rounded-circle border border-primary\"\n              src={defaultProfile}\n              alt=\"Profile image placeholder\"\n            />\n            {!this.state.isLoading ? (\n            <Media.Body className=\"mr-3\">\n              <h3>Username: {this.state.user_id}</h3>\n              <h4 className=\"text-muted\"> Email: {this.state.email} </h4>\n            </Media.Body> ) : <h3>Loading Profile...</h3> }\n          </Media>\n\n          <Form.Group controlId=\"profileBio\">\n                            <Form.Label>Bio:</Form.Label>\n                            <Form.Control type=\"input\"\n                                placeholder=\"Tell us more about yourself\"\n                                name=\"bio\"\n                                //onChange={this.handleChange.bind(this)}\n                                value={this.state.bio} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" className>\n                                Update Bio\n                            </Button>\n                            \n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default UserProfile;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/SignUp.jsx",["156","157","158","159"],"import React from \"react\";\nimport { Button, FormGroup, FormControl, Form, Card, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Route } from 'react-router-dom';\n\nclass SignUp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errors: [],\n    };\n  }\n  validateForm() {\n    const errors = [];\n\n    if(this.state.username.length === 0 || \n      this.state.email.length === 0 || \n      this.state.password.length === 0 ||\n      this.state.passwordConfirm.length === 0) {\n        errors.push(\"Required fields have been left blank.\");\n        return errors;\n      }\n    if (this.state.username.length < 3) {\n      errors.push(\"Username must be at least 3 characters.\");\n    }\n\n    if (this.state.email.split(\"\").filter(x => x === \"@\").length !== 1) {\n      errors.push(\"Email should contain the @ symbol.\");\n    }\n\n    if (this.state.password !== this.state.passwordConfirm) {\n      errors.push(\"Passwords do not match.\");\n    }\n    if (!this.state.password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*\\-£])(?=.{8,})/)) {\n      errors.push(\n        <div>\n        <p>Password should have:</p>\n          <ul> \n            <li> Minimum eight characters</li> \n            <li> At least one number.</li>\n            <li> At least one special character.</li>\n            <li> At least one capital letter.</li>\n          </ul></div>);\n    }\n\n    return errors;\n  }\n  handlePasswordChange(event) {\n    this.handleChange(event);\n  }\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const errors = this.validateForm();\n    if(errors.length > 0) {\n      this.setState({errors});\n      return;\n    }\n    const opt = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(\n        {\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password\n        }\n      )}\n\n    // To improve once we have a better way to check unique usernames.\n    fetch('/api/register', opt).then( ((response) => {\n      if (!response.ok) {\n        throw new Error();\n      }\n      return response;\n      }))\n    .then(((response) => {\n      this.props.history.push('/login')\n      }))\n    .catch((error) => {\n      this.setState({isNonUnique: true})\n      })\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Card className=\"mt-4 mb-4\">\n        <Card.Body className=\"mx-auto\" onSubmit={this.handleSubmit.bind(this)}>\n          <div>\n            <p>Sign up for your Academoo account here. </p>\n            <Form autoComplete=\"off\">\n\n              <FormGroup controlId=\"email\" bssize=\"large\">\n                <Form.Label>Email</Form.Label>\n                <FormControl\n                  autoFocus\n                  onChange={this.handleChange.bind(this)}\n                  type=\"email\"\n                  value={this.state.email}\n                  name=\"email\"\n                  autoComplete=\"new-password\"\n                  required\n                />\n              </FormGroup>\n              <FormGroup controlId=\"username\" bssize=\"large\">\n                <Form.Label>Create a username</Form.Label>\n                <FormControl\n                  onChange={this.handleChange.bind(this)}\n                  type=\"text\"\n                  value={this.state.username}\n                  name=\"username\"\n                  autoComplete=\"new-password\"\n                />\n              </FormGroup>\n              {this.state.isNonUnique ? (<Alert variant='warning'> Username or email already registered.</Alert>) : null}\n              <FormGroup controlId=\"password\" bssize=\"large\">\n                <Form.Label>Password</Form.Label>\n                <FormControl\n                  onChange={this.handlePasswordChange.bind(this)}\n                  value={this.state.password}\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </FormGroup>\n\n              <FormGroup controlId=\"confirmPassword\" bssize=\"large\">\n                <Form.Label>Confirm Password</Form.Label>\n                <FormControl\n                  onChange={this.handleChange.bind(this)}\n                  value={this.state.passwordConfirm}\n                  name=\"passwordConfirm\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </FormGroup>\n              {errors.map(error => (\n                <Alert variant='warning' key={error}>{error}</Alert>\n              ))}\n            \n                <Button\n                  type='submit'\n                  onClick={this.handleSubmit.bind(this)}\n                >\n                  Register now\n                </Button>\n              <Link to=\"/login\" className=\"btn btn-link\">\n                Already signed up?\n              </Link>\n\n            </Form>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SignUp;\n","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/test_post_json.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommunityList.jsx",["160","161","162"],"import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    CaretUpFill,\n    CaretDownFill\n} from \"react-bootstrap-icons\";\n\n\nclass CommunityList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            communities: [],\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchCommunities();\n    }\n\n    fetchCommunities() {\n        fetch('/api/communities' + (this.props.instance !== \"local\" ? \"?external=\" + this.props.instance : \"\"))\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                    communities: data,\n                    isLoading: false,\n                })\n            )\n    }\n\n    render() {\n        const { communities, isLoading } = this.state;\n        return (\n            <Accordion defaultActiveKey=\"0\">\n                <Card className=\"mt-4\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"pt-4\">\n                        <h5>Hosted {this.props.instance === \"local\" ? \"locally:\" : \"on '\" + this.props.instance + \"':\"}\n                        </h5>\n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"px-0 py-1\">\n                            <ListGroup variant=\"flush\">\n                                {!isLoading ?\n                                    communities.map((community) =>\n                                        community != \"\" &&\n                                        \n                                            <ListGroup.Item>\n                                                <Link to={this.props.instance === \"local\" ? \n                                                \"communities/\" + community : \"communities/\" + this.props.instance + \"/\" + community} >\n                                                {community}\n                                                </Link>\n                                            </ListGroup.Item>)\n                                    : <ListGroup.Item>Loading Communities...</ListGroup.Item>\n                                }\n                            </ListGroup>\n                        </Card.Body>\n                    </Accordion.Collapse>\n\n                </Card>\n            </Accordion>\n        )\n    }\n}\n\nexport default CommunityList;","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Post.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/Sidebar.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/CommentCreator.jsx",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/auth/index.js",[],"/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/util/timeSince.js",["163"],"export default function timeSince(timestamp) {\n    let date = new Date(timestamp*1000);\n    \n    let seconds = Math.floor((new Date() - date) / 1000);\n\n    let interval = seconds / 31536000;\n    let count = Math.floor(interval);\n\n    if (interval >= 1) {\n      return count + \" year\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 2592000;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n        return count + \" month\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 86400;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n      return count + \" day\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 3600;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n        return count + \" hour\" + ((count > 1) ? \"s\" : \"\");\n    }\n\n    interval = seconds / 60;\n    count = Math.floor(interval);\n\n    if (interval > 1) {\n      return count + \" minute\" + ((count > 1) ? \"s\" : \"\");\n    }\n    \n    return seconds + \" second\" + ((seconds > 1 || seconds == 0 ) ? \"s\" : \"\");\n}","/home/rhona/Documents/Junior_Honours/CS3099/project-code/client/src/components/PublicProfile.jsx",["164","165","166"],"import React, { Component } from \"react\"\nimport { Card, Media } from \"react-bootstrap\";\nimport defaultProfile from \"../images/default_profile.png\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass PublicProfile extends Component {\n    state = {\n        isLoading: true,\n        username: this.props.match.params.id,\n        email: \"\",\n        host: this.props.match.params.instance ? this.props.match.params.instance : \"local\",\n        bio: \"\",\n        error: null,\n\n    };\n\n\n    componentDidMount() {\n        this.fetchUser();\n    }\n\n    fetchUser() {\n        fetch('/api/users/' + this.state.username + (this.state.host !== \"local\" ? \"&external=\" + this.state.host : \"\"))\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                    isLoading: false,\n                    // usename: data.id,\n                    email: data.email,\n                    host: data.host,\n                    error: null,\n                })\n            )\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    render() {\n        const { isLoading, username, email, host, bio, error } = this.state;\n        console.log(username)\n        return username && (\n\n            < Card className=\"mt-4\" >\n                <Card.Body>\n                    <Media>\n                        <img\n                            width={150}\n                            height={150}\n                            className=\"mr-3 rounded-circle border border-primary\"\n                            src={defaultProfile}\n                            alt=\"Profile image placeholder\"\n                        />\n                        {!isLoading ? (\n                            <Media.Body className=\"mr-3\">\n                                <h3>Username: {username}</h3>\n                                <h4 className=\"text-muted\"> Email: {email} </h4>\n                            </Media.Body>) : <h3>Loading Profile...</h3>}\n                    </Media>\n\n                    <Form.Group controlId=\"profileBio\">\n                        <Form.Label>Bio:</Form.Label>\n                        <Form.Control type=\"input\"\n                            placeholder=\"Tell us more about yourself\"\n                            name=\"bio\"\n                            //onChange={this.handleChange.bind(this)}\n                            value={bio} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" className>\n                        Update Bio\n                            </Button>\n\n                </Card.Body>\n            </Card >\n        );\n    }\n\n}\n\nexport default PublicProfile;",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":64,"column":22,"nodeType":"177","messageId":"178","endLine":64,"endColumn":24},{"ruleId":"171","severity":1,"message":"179","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":38},{"ruleId":"171","severity":1,"message":"180","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":12},{"ruleId":"171","severity":1,"message":"181","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":15},{"ruleId":"171","severity":1,"message":"182","line":4,"column":27,"nodeType":"173","messageId":"174","endLine":4,"endColumn":30},{"ruleId":"171","severity":1,"message":"183","line":4,"column":32,"nodeType":"173","messageId":"174","endLine":4,"endColumn":35},{"ruleId":"171","severity":1,"message":"184","line":4,"column":37,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"171","severity":1,"message":"185","line":4,"column":43,"nodeType":"173","messageId":"174","endLine":4,"endColumn":54},{"ruleId":"171","severity":1,"message":"186","line":4,"column":56,"nodeType":"173","messageId":"174","endLine":4,"endColumn":62},{"ruleId":"171","severity":1,"message":"187","line":4,"column":64,"nodeType":"173","messageId":"174","endLine":4,"endColumn":69},{"ruleId":"171","severity":1,"message":"188","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":20},{"ruleId":"171","severity":1,"message":"189","line":72,"column":13,"nodeType":"173","messageId":"174","endLine":72,"endColumn":22},{"ruleId":"171","severity":1,"message":"190","line":72,"column":24,"nodeType":"173","messageId":"174","endLine":72,"endColumn":29},{"ruleId":"171","severity":1,"message":"191","line":72,"column":31,"nodeType":"173","messageId":"174","endLine":72,"endColumn":36},{"ruleId":"171","severity":1,"message":"192","line":72,"column":56,"nodeType":"173","messageId":"174","endLine":72,"endColumn":67},{"ruleId":"171","severity":1,"message":"193","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"194","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"195","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":15},{"ruleId":"175","severity":1,"message":"196","line":116,"column":43,"nodeType":"177","messageId":"178","endLine":116,"endColumn":45},{"ruleId":"171","severity":1,"message":"197","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":16},{"ruleId":"171","severity":1,"message":"198","line":9,"column":8,"nodeType":"173","messageId":"174","endLine":9,"endColumn":22},{"ruleId":"171","severity":1,"message":"199","line":12,"column":10,"nodeType":"173","messageId":"174","endLine":12,"endColumn":21},{"ruleId":"171","severity":1,"message":"193","line":13,"column":10,"nodeType":"173","messageId":"174","endLine":13,"endColumn":18},{"ruleId":"171","severity":1,"message":"194","line":13,"column":20,"nodeType":"173","messageId":"174","endLine":13,"endColumn":29},{"ruleId":"171","severity":1,"message":"179","line":13,"column":31,"nodeType":"173","messageId":"174","endLine":13,"endColumn":41},{"ruleId":"171","severity":1,"message":"200","line":14,"column":10,"nodeType":"173","messageId":"174","endLine":14,"endColumn":19},{"ruleId":"171","severity":1,"message":"201","line":26,"column":5,"nodeType":"173","messageId":"174","endLine":26,"endColumn":8},{"ruleId":"202","severity":2,"message":"203","line":76,"column":64,"nodeType":"173","messageId":"204","endLine":76,"endColumn":69},{"ruleId":"171","severity":1,"message":"182","line":3,"column":55,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"171","severity":1,"message":"205","line":3,"column":60,"nodeType":"173","messageId":"174","endLine":3,"endColumn":69},{"ruleId":"175","severity":1,"message":"196","line":93,"column":47,"nodeType":"177","messageId":"178","endLine":93,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":40,"column":13,"nodeType":"208","endLine":46,"endColumn":15},{"ruleId":"171","severity":1,"message":"209","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":39,"column":80,"nodeType":"212","messageId":"213","endLine":39,"endColumn":81,"suggestions":"214"},{"ruleId":"210","severity":1,"message":"215","line":39,"column":83,"nodeType":"212","messageId":"213","endLine":39,"endColumn":84,"suggestions":"216"},{"ruleId":"210","severity":1,"message":"217","line":39,"column":86,"nodeType":"212","messageId":"213","endLine":39,"endColumn":87,"suggestions":"218"},{"ruleId":"171","severity":1,"message":"219","line":9,"column":5,"nodeType":"173","messageId":"174","endLine":9,"endColumn":16},{"ruleId":"171","severity":1,"message":"220","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":53,"column":51,"nodeType":"177","messageId":"178","endLine":53,"endColumn":53},{"ruleId":"175","severity":1,"message":"196","line":41,"column":59,"nodeType":"177","messageId":"178","endLine":41,"endColumn":61},{"ruleId":"171","severity":1,"message":"221","line":39,"column":45,"nodeType":"173","messageId":"174","endLine":39,"endColumn":49},{"ruleId":"171","severity":1,"message":"191","line":39,"column":56,"nodeType":"173","messageId":"174","endLine":39,"endColumn":61},{"ruleId":"206","severity":1,"message":"207","line":46,"column":25,"nodeType":"208","endLine":52,"endColumn":27},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'Post' is defined but never used.","'Sidebar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'PlusCircle' is defined but never used.","'isLoading' is assigned a value but never used.","'posts' is assigned a value but never used.","'error' is assigned a value but never used.","'newPostText' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'posts' is defined but never used.","Expected '===' and instead saw '=='.","'Dropdown' is defined but never used.","'defaultProfile' is defined but never used.","'HostContext' is defined but never used.","'authFetch' is defined but never used.","'md5' is assigned a value but never used.","no-undef","'email' is not defined.","undef","'CardGroup' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Route' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["224","225"],"Unnecessary escape character: \\^.",["226","227"],"Unnecessary escape character: \\*.",["228","229"],"'CaretUpFill' is defined but never used.","'CaretDownFill' is defined but never used.","'host' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"230","fix":"231","desc":"232"},{"messageId":"233","fix":"234","desc":"235"},{"messageId":"230","fix":"236","desc":"232"},{"messageId":"233","fix":"237","desc":"235"},{"messageId":"230","fix":"238","desc":"232"},{"messageId":"233","fix":"239","desc":"235"},"removeEscape",{"range":"240","text":"241"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"242","text":"243"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"244","text":"241"},{"range":"245","text":"243"},{"range":"246","text":"241"},{"range":"247","text":"243"},[1162,1163],"",[1162,1162],"\\",[1165,1166],[1165,1165],[1168,1169],[1168,1168]]